{"version":3,"sources":["providers/apiProvider.js","pages/LoginPage.js","pages/RegisterPage.js","pages/PlacesListPage.js","pages/PlaceChatPage.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","headers","Headers","append","registerUser","payload","a","body","JSON","stringify","console","log","fetch","method","response","json","data","ok","warn","login","getPlaces","createPlace","owner_id","initialPayload","username","password","LoginPage","props","useState","setPayload","history","useHistory","onChange","e","preventDefault","target","name","value","send","result","localStorage","setItem","push","type","onClick","to","email","RegisterPage","PlacesListPage","user","setUser","list","setList","useEffect","userObj","parse","getItem","getData","id","removeItem","map","item","PlaceChatPage","message","setMessage","socket","setSocket","channel","setChannel","messages","setMessages","place","useParams","messagesContainerRef","useRef","inputRef","current","focus","socketObj","Socket","connect","disconnect","connectChannel","join","receive","resp","leave","eventId","on","scrollBy","off","from","time","Date","toUTCString","className","ref","onKeyPress","key","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bd4b2d8.chunk.js","sourcesContent":["// const baseUrl = \"http://localhost:4000/api\"\r\nconst baseUrl = \"https://unwieldy-impressive-argusfish.gigalixirapp.com/api\"\r\n\r\nlet headers = new Headers();\r\nheaders.append(\"Content-Type\", \"application/json\");\r\n\r\nexport const registerUser = async payload => {\r\n  const body = JSON.stringify(payload);\r\n  console.log(body);\r\n  const response = await fetch(`${baseUrl}/users`, {\r\n    method: 'post',\r\n    body: body,\r\n    headers: headers\r\n  })\r\n  const data = await response.json();\r\n  if(!response.ok) {\r\n    console.warn(response)\r\n    throw(data)\r\n  }\r\n  return data;\r\n}\r\n\r\nexport const login = async payload => {\r\n  const body = JSON.stringify(payload);\r\n  console.log(body);\r\n  const response = await fetch(`${baseUrl}/auth/`, {\r\n    method: 'post',\r\n    body: body,\r\n    headers: headers\r\n  })\r\n  const data = await response.json();\r\n  if(!response.ok) {\r\n    console.warn(response)\r\n    throw(data)\r\n  }\r\n  return data;\r\n}\r\n\r\nexport const getPlaces = async () => {\r\n  const response = await fetch(`${baseUrl}/places/`)\r\n  const data = await response.json();\r\n  if(!response.ok) {\r\n    console.warn(response)\r\n    throw(data)\r\n  }\r\n  return data;\r\n}\r\n\r\nexport const createPlace = async (payload, owner_id) => {\r\n  const body = JSON.stringify({...payload, owner_id});\r\n  console.log(body);\r\n  const response = await fetch(`${baseUrl}/places/`, {\r\n    method: 'post',\r\n    body: body,\r\n    headers: headers\r\n  })\r\n  const data = await response.json();\r\n  if(!response.ok) {\r\n    console.warn(response)\r\n    throw(data)\r\n  }\r\n  return data;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { login } from '../providers/apiProvider'\r\n\r\nconst initialPayload = {\r\n  username: \"\",\r\n  password: \"\",\r\n}\r\n\r\nconst LoginPage = props => {\r\n\r\n  const [payload, setPayload] = useState(initialPayload)\r\n  const history = useHistory();\r\n\r\n  const onChange = e => {\r\n    e.preventDefault()\r\n    setPayload({...payload, [e.target.name]: e.target.value})\r\n  }\r\n\r\n  const send = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      const result = await login(payload)\r\n      console.log(result)\r\n      localStorage.setItem(\"user\", JSON.stringify(result))\r\n      history.push(\"/list\")\r\n    } catch (error) {\r\n      console.warn(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <h1>SignIn</h1>\r\n      <form>\r\n        <label>\r\n          Username\r\n          <input name=\"username\" onChange={onChange} value={payload.username} />\r\n        </label>\r\n        <label>\r\n          Password\r\n          <input type=\"password\" name=\"password\" onChange={onChange} value={payload.password} />\r\n        </label>\r\n        <button onClick={send}>Enter</button>\r\n      </form>\r\n      <Link to=\"/register\">SignUp</Link>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default LoginPage\r\n","import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { registerUser } from '../providers/apiProvider'\r\n\r\nconst initialPayload = {\r\n  username: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n}\r\n\r\nconst RegisterPage = props => {\r\n\r\n  const [payload, setPayload] = useState(initialPayload)\r\n  const history = useHistory();\r\n\r\n  const onChange = e => {\r\n    e.preventDefault()\r\n    setPayload({...payload, [e.target.name]: e.target.value})\r\n  }\r\n\r\n  const send = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      const result = await registerUser(payload)\r\n      console.log(result)\r\n      localStorage.setItem(\"user\", JSON.stringify(result))\r\n      history.push(\"/list\")\r\n    } catch (error) {\r\n      console.warn(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <h1>SignUp</h1>\r\n      <form>\r\n        <label>\r\n          Username\r\n          <input name=\"username\" onChange={onChange} value={payload.username} />\r\n        </label>\r\n        <label>\r\n          E-mail\r\n          <input name=\"email\" onChange={onChange} value={payload.email} />\r\n        </label>\r\n        <label>\r\n          Password\r\n          <input type=\"password\" name=\"password\" onChange={onChange} value={payload.password} />\r\n        </label>\r\n        <button onClick={send}>Register</button>\r\n      </form>\r\n      <Link to=\"/\">SignIn</Link>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default RegisterPage\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { createPlace, getPlaces } from '../providers/apiProvider';\r\n\r\nconst initialPayload = { name: \"\" }\r\n\r\nconst PlacesListPage = props => {\r\n\r\n  const history = useHistory();\r\n  const [user, setUser] = useState({});\r\n  const [list, setList] = useState([]);\r\n  const [payload, setPayload] = useState(initialPayload)\r\n\r\n  useEffect(() => {\r\n    const userObj = JSON.parse(localStorage.getItem(\"user\"));\r\n    console.log(userObj);\r\n    setUser(userObj);\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const result = await getPlaces();\r\n      console.log(result);\r\n      setList(result.data);\r\n    }\r\n    getData();\r\n  }, [])\r\n\r\n  const onChange = e => {\r\n    e.preventDefault()\r\n    setPayload({...payload, [e.target.name]: e.target.value})\r\n  }\r\n\r\n  const send = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const result = await createPlace(payload, user?.id)\r\n      console.log(result)\r\n      setList([...list, result.data]);\r\n    } catch (error) {\r\n      console.warn(error)\r\n    }\r\n  }\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"user\")\r\n    history.push(\"/\")\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <h1>Places</h1>\r\n      <p>Welcome, {`<${user.username}>`}</p>\r\n      <button onClick={logout}>SignOut</button>\r\n\r\n      <form>\r\n        <h2>Create a place for you</h2>\r\n        <label>\r\n          Name\r\n          <input name=\"name\" onChange={onChange} value={payload.name} />\r\n        </label>\r\n        <button onClick={send}>Create</button>\r\n      </form>\r\n\r\n      <section>\r\n        <h2>Available Places</h2>\r\n        <ul>\r\n          {list.map(item => (\r\n            <li key={`place-${item.id}`}>\r\n              <Link to={`/chat/${item.name}`}>\r\n                @{item.name}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default PlacesListPage\r\n","import { Socket } from 'phoenix';\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { useParams } from 'react-router'\r\n\r\nconst PlaceChatPage = props => {\r\n\r\n  const [user, setUser] = useState({});\r\n  const [message, setMessage] = useState(\"\");\r\n  const [socket, setSocket] = useState(null);\r\n  const [channel, setChannel] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const { place } = useParams();\r\n  const messagesContainerRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const userObj = JSON.parse(localStorage.getItem(\"user\"))\r\n    setUser(userObj)\r\n    inputRef.current.focus()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const socketObj = new Socket(\"wss://unwieldy-impressive-argusfish.gigalixirapp.com/socket\", {});\r\n    socketObj.connect()\r\n    setSocket(socketObj)\r\n    return function disconnect() {\r\n      console.log(\"disconnect\")\r\n      socketObj.disconnect()\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(!socket) return;\r\n\r\n    const connectChannel = socket.channel(`place:${place}`)\r\n\r\n    connectChannel.join()\r\n      .receive(\"ok\", resp => { console.log(\"Joined successfully\", resp) })\r\n      .receive(\"error\", resp => { console.log(\"Unable to join\", resp) })\r\n      \r\n    setChannel(connectChannel);\r\n\r\n    return function leaveChannel() {\r\n      console.log(\"leaveChannel\")\r\n      connectChannel.leave()\r\n    };\r\n    \r\n  }, [place, socket])\r\n\r\n  useEffect(() => {\r\n    if(!channel) return\r\n    const eventId = channel.on(`place:${place}:new_message`, (payload) => {\r\n      console.log(payload)\r\n      setMessages([...messages, payload])\r\n      messagesContainerRef.current.scrollBy(0,30)\r\n      // setTimeout(() => messagesContainerRef.current.scrollBy(0,30), 500)\r\n    });\r\n    return function offEvent() {\r\n      console.log(\"offEvent\")\r\n      channel.off(`place:${place}:new_message`, eventId)\r\n    }\r\n  }, [channel, place, messages])\r\n\r\n  const send = (e) => {\r\n    e.preventDefault()\r\n    if(message === \"\") return\r\n    const payload = {\r\n      message: message,\r\n      from: user.username,\r\n      time: new Date().toUTCString()\r\n    }\r\n    channel.push(\"message:add\", payload)\r\n    setMessage(\"\")\r\n  }\r\n\r\n  const onKeyPress = e => {\r\n    if(e.key === 'Enter'){\r\n      send(e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main className=\"chat-window\">\r\n      <h1 className=\"chat-place-name\">@{place}</h1>\r\n\r\n      <section className=\"messages\" ref={messagesContainerRef}>\r\n        {messages.map(item => (\r\n          <p className=\"message\" id={`${item.from}-${item.time}`}>\r\n            <span className=\"sender\">{`<${item.from}>`} </span>\r\n            <span className=\"message-content\">{item.message}</span>\r\n          </p>\r\n        ))}\r\n      </section>\r\n\r\n      <form className=\"chat-form\">\r\n        <label>\r\n          <span className=\"label-text\">\r\n            message:\r\n          </span>\r\n          <input \r\n            value={message}\r\n            onChange={e => setMessage(e.target.value)}\r\n            onKeyPress={onKeyPress}\r\n            ref={inputRef}\r\n          />\r\n        </label>\r\n        <button onClick={send}>send</button>\r\n      </form>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default PlaceChatPage\r\n","import './App.css';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport LoginPage from './pages/LoginPage';\nimport RegisterPage from './pages/RegisterPage';\nimport PlacesListPage from './pages/PlacesListPage';\nimport PlaceChatPage from './pages/PlaceChatPage';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/chat/:place\">\n          <PlaceChatPage />\n        </Route>\n        <Route path=\"/list\">\n          <PlacesListPage />\n        </Route>\n        <Route path=\"/register\">\n          <RegisterPage />\n        </Route>\n        <Route path=\"/\">\n          <LoginPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}